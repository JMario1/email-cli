{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0","program":"/home/jm/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","thread_local","/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=cff39cd135a0bbf9","-C","extra-filename=-cff39cd135a0bbf9","--out-dir","/home/jm/rust/jude-omenai/target/rls/debug/deps","-L","dependency=/home/jm/rust/jude-omenai/target/rls/debug/deps","--extern","lazy_static=/home/jm/rust/jude-omenai/target/rls/debug/deps/liblazy_static-9fbe2dfcbc5171f1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/jm/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/jm/rust/jude-omenai/target/rls/debug/deps/libthread_local-cff39cd135a0bbf9.rmeta"},"prelude":{"crate_id":{"name":"thread_local","disambiguator":[17335386531945322773,1900170441407763619]},"crate_root":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src","external_crates":[{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","num":18,"id":{"name":"lazy_static","disambiguator":[10582890326764300823,12078812139612991752]}}],"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":333,"byte_end":15416,"line_start":8,"line_end":508,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":61},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2627,"byte_end":2641,"line_start":77,"line_end":77,"column_start":18,"column_end":32},"alias_span":null,"name":"CachedIntoIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2643,"byte_end":2656,"line_start":77,"line_end":77,"column_start":34,"column_end":47},"alias_span":null,"name":"CachedIterMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2658,"byte_end":2675,"line_start":77,"line_end":77,"column_start":49,"column_end":66},"alias_span":null,"name":"CachedThreadLocal","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":333,"byte_end":15416,"line_start":8,"line_end":508,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":71},{"krate":0,"index":95},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":286},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":167},{"krate":0,"index":172},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":194},{"krate":0,"index":199},{"krate":0,"index":204},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":224},{"krate":0,"index":226}],"decl_id":null,"docs":" Per-object thread-local storage","sig":null,"attributes":[{"value":"/ Per-object thread-local storage","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":333,"byte_end":368,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":369,"byte_end":372,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This library provides the `ThreadLocal` type which allows a separate copy of","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":373,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ an object to be used for each thread. This allows for per-object","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":454,"byte_end":522,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ thread-local storage, unlike the standard library's `thread_local!` macro","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":523,"byte_end":600,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ which only allows static thread-local storage.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":601,"byte_end":651,"line_start":13,"line_end":13,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":652,"byte_end":655,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Per-thread objects are not destroyed when a thread exits. Instead, objects","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":656,"byte_end":734,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ are only destroyed when the `ThreadLocal` containing them is destroyed.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":735,"byte_end":810,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":811,"byte_end":814,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ You can also iterate over the thread-local values of all thread in a","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":815,"byte_end":887,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `ThreadLocal` object using the `iter_mut` and `into_iter` methods. This can","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":888,"byte_end":967,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ only be done if you have mutable access to the `ThreadLocal` object, which","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":968,"byte_end":1046,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ guarantees that you are the only thread currently accessing it.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1047,"byte_end":1114,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1115,"byte_end":1118,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that since thread IDs are recycled when a thread exits, it is possible","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1119,"byte_end":1198,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ for one thread to retrieve the object of another thread. Since this can only","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1199,"byte_end":1279,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ occur after a thread has exited this does not lead to any race conditions.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1280,"byte_end":1358,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1359,"byte_end":1362,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1363,"byte_end":1377,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1378,"byte_end":1381,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Basic usage of `ThreadLocal`:","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1382,"byte_end":1415,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1416,"byte_end":1419,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1420,"byte_end":1431,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1432,"byte_end":1466,"line_start":32,"line_end":32,"column_start":1,"column_end":35}},{"value":"/ let tls: ThreadLocal<u32> = ThreadLocal::new();","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1467,"byte_end":1518,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(tls.get(), None);","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1519,"byte_end":1551,"line_start":34,"line_end":34,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(tls.get_or(|| 5), &5);","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1552,"byte_end":1589,"line_start":35,"line_end":35,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(tls.get(), Some(&5));","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1590,"byte_end":1626,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1627,"byte_end":1634,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1635,"byte_end":1638,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Combining thread-local values into a single result:","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1639,"byte_end":1694,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1699,"byte_end":1710,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"/ use thread_local::ThreadLocal;","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1711,"byte_end":1745,"line_start":42,"line_end":42,"column_start":1,"column_end":35}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1746,"byte_end":1769,"line_start":43,"line_end":43,"column_start":1,"column_end":24}},{"value":"/ use std::cell::Cell;","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1770,"byte_end":1794,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/ use std::thread;","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1795,"byte_end":1815,"line_start":45,"line_end":45,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let tls = Arc::new(ThreadLocal::new());","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1820,"byte_end":1863,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1864,"byte_end":1867,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ // Create a bunch of threads to do stuff","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1868,"byte_end":1912,"line_start":49,"line_end":49,"column_start":1,"column_end":45}},{"value":"/ for _ in 0..5 {","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1913,"byte_end":1932,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/     let tls2 = tls.clone();","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1933,"byte_end":1964,"line_start":51,"line_end":51,"column_start":1,"column_end":32}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1965,"byte_end":1996,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/         // Increment a counter to count some event...","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":1997,"byte_end":2054,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"/         let cell = tls2.get_or(|| Cell::new(0));","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2055,"byte_end":2107,"line_start":54,"line_end":54,"column_start":1,"column_end":53}},{"value":"/         cell.set(cell.get() + 1);","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2108,"byte_end":2145,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     }).join().unwrap();","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2146,"byte_end":2173,"line_start":56,"line_end":56,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2174,"byte_end":2179,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2180,"byte_end":2183,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Once all threads are done, collect the counter values and return the","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2184,"byte_end":2259,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ // sum of all thread-local counter values.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2260,"byte_end":2306,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/ let tls = Arc::try_unwrap(tls).unwrap();","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2307,"byte_end":2351,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/ let total = tls.into_iter().fold(0, |x, y| x + y.get());","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2352,"byte_end":2412,"line_start":62,"line_end":62,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(total, 5);","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2413,"byte_end":2438,"line_start":63,"line_end":63,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2439,"byte_end":2446,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"warn(missing_docs)","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2448,"byte_end":2470,"line_start":66,"line_end":66,"column_start":1,"column_end":23}},{"value":"allow(clippy :: mutex_atomic)","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":2471,"byte_end":2502,"line_start":67,"line_end":67,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":12},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15808,"byte_end":15825,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"CachedThreadLocal","qualname":"::cached::CachedThreadLocal","value":"CachedThreadLocal {  }","parent":null,"children":[{"krate":0,"index":14}],"decl_id":null,"docs":" Wrapper around [`ThreadLocal`].","sig":null,"attributes":[{"value":"/ Wrapper around [`ThreadLocal`].","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15545,"byte_end":15580,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15581,"byte_end":15584,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This used to add a fast path for a single thread, however that has been","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15585,"byte_end":15660,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ obsoleted by performance improvements to [`ThreadLocal`] itself.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15661,"byte_end":15729,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `ThreadLocal` instead\")","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15730,"byte_end":15796,"line_start":12,"line_end":12,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16112,"byte_end":16115,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<CachedThreadLocal<T>>::new","value":"pub fn new() -> CachedThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `CachedThreadLocal`.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16042,"byte_end":16086,"line_start":24,"line_end":24,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16091,"byte_end":16100,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16319,"byte_end":16322,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"get","qualname":"<CachedThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16232,"byte_end":16293,"line_start":32,"line_end":32,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16298,"byte_end":16307,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16498,"byte_end":16504,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"get_or","qualname":"<CachedThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16382,"byte_end":16457,"line_start":38,"line_end":38,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16462,"byte_end":16472,"line_start":39,"line_end":39,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16477,"byte_end":16486,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16810,"byte_end":16820,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<CachedThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16619,"byte_end":16694,"line_start":48,"line_end":48,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16699,"byte_end":16769,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16774,"byte_end":16784,"line_start":50,"line_end":50,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16789,"byte_end":16798,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17284,"byte_end":17292,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<CachedThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> CachedIterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16964,"byte_end":17032,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17037,"byte_end":17040,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17045,"byte_end":17118,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17123,"byte_end":17193,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17198,"byte_end":17258,"line_start":63,"line_end":63,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17263,"byte_end":17272,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17782,"byte_end":17787,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"clear","qualname":"<CachedThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17413,"byte_end":17487,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17492,"byte_end":17530,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17535,"byte_end":17538,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17543,"byte_end":17616,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17621,"byte_end":17691,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17696,"byte_end":17756,"line_start":76,"line_end":76,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17761,"byte_end":17770,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18471,"byte_end":18485,"line_start":106,"line_end":106,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<CachedThreadLocal<T>>::get_or_default","value":"pub fn get_or_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18358,"byte_end":18433,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18438,"byte_end":18459,"line_start":105,"line_end":105,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18949,"byte_end":18962,"line_start":121,"line_end":121,"column_start":12,"column_end":25},"name":"CachedIterMut","qualname":"::cached::CachedIterMut","value":"CachedIterMut {  }","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Mutable iterator over the contents of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `CachedThreadLocal`.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18810,"byte_end":18874,"line_start":119,"line_end":119,"column_start":1,"column_end":65}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `IterMut` instead\")","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18875,"byte_end":18937,"line_start":120,"line_end":120,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":61},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19501,"byte_end":19515,"line_start":143,"line_end":143,"column_start":12,"column_end":26},"name":"CachedIntoIter","qualname":"::cached::CachedIntoIter","value":"CachedIntoIter {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" An iterator that moves out of a `CachedThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `CachedThreadLocal`.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19369,"byte_end":19425,"line_start":141,"line_end":141,"column_start":1,"column_end":57}},{"value":"deprecated(since = \"1.1.0\", note = \"Use `IntoIter` instead\")","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19426,"byte_end":19489,"line_start":142,"line_end":142,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":135},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":3455,"byte_end":3466,"line_start":104,"line_end":104,"column_start":12,"column_end":23},"name":"ThreadLocal","qualname":"::ThreadLocal","value":"ThreadLocal {  }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":139}],"decl_id":null,"docs":" Thread-local variable wrapper","sig":null,"attributes":[{"value":"/ Thread-local variable wrapper","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":3343,"byte_end":3376,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":3377,"byte_end":3380,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ See the [module-level documentation](index.html) for more.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":3381,"byte_end":3443,"line_start":103,"line_end":103,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4834,"byte_end":4837,"line_start":149,"line_end":149,"column_start":12,"column_end":15},"name":"new","qualname":"<ThreadLocal<T>>::new","value":"pub fn new() -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Creates a new empty `ThreadLocal`.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4784,"byte_end":4822,"line_start":148,"line_end":148,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":5131,"byte_end":5144,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ThreadLocal<T>>::with_capacity","value":"pub fn with_capacity(usize) -> ThreadLocal<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads\n access the thread local it will never reallocate. The capacity may be rounded up to the\n nearest power of two.\n","sig":null,"attributes":[{"value":"/ Creates a new `ThreadLocal` with an initial capacity. If less than the capacity threads","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4902,"byte_end":4993,"line_start":153,"line_end":153,"column_start":5,"column_end":96}},{"value":"/ access the thread local it will never reallocate. The capacity may be rounded up to the","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4998,"byte_end":5089,"line_start":154,"line_end":154,"column_start":5,"column_end":96}},{"value":"/ nearest power of two.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":5094,"byte_end":5119,"line_start":155,"line_end":155,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6043,"byte_end":6046,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"get","qualname":"<ThreadLocal<T>>::get","value":"pub fn get(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, if it exists.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, if it exists.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":5970,"byte_end":6031,"line_start":180,"line_end":180,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6253,"byte_end":6259,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"get_or","qualname":"<ThreadLocal<T>>::get_or","value":"pub fn get_or<F>(&Self, F) -> &T where F: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6151,"byte_end":6226,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ exist.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6231,"byte_end":6241,"line_start":187,"line_end":187,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6637,"byte_end":6647,"line_start":201,"line_end":201,"column_start":12,"column_end":22},"name":"get_or_try","qualname":"<ThreadLocal<T>>::get_or_try","value":"pub fn get_or_try<F, E>(&Self, F) -> Result<&T, E> where F: FnOnce() ->\nResult<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates it if it doesn't\n exist. If `create` fails, that error is returned and no element is\n added.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates it if it doesn't","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6460,"byte_end":6535,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/ exist. If `create` fails, that error is returned and no element is","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6540,"byte_end":6610,"line_start":199,"line_end":199,"column_start":5,"column_end":75}},{"value":"/ added.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":6615,"byte_end":6625,"line_start":200,"line_end":200,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8878,"byte_end":8886,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<ThreadLocal<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable iterator over the local values of all threads in\n unspecified order.","sig":null,"attributes":[{"value":"/ Returns a mutable iterator over the local values of all threads in","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8543,"byte_end":8613,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ unspecified order.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8618,"byte_end":8640,"line_start":262,"line_end":262,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8645,"byte_end":8648,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8653,"byte_end":8726,"line_start":264,"line_end":264,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8731,"byte_end":8801,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":8806,"byte_end":8866,"line_start":266,"line_end":266,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9375,"byte_end":9380,"line_start":280,"line_end":280,"column_start":12,"column_end":17},"name":"clear","qualname":"<ThreadLocal<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Removes all thread-specific values from the `ThreadLocal`, effectively\n reseting it to its original state.","sig":null,"attributes":[{"value":"/ Removes all thread-specific values from the `ThreadLocal`, effectively","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9020,"byte_end":9094,"line_start":274,"line_end":274,"column_start":5,"column_end":79}},{"value":"/ reseting it to its original state.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9099,"byte_end":9137,"line_start":275,"line_end":275,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9142,"byte_end":9145,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `ThreadLocal` mutably, this operation can","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9150,"byte_end":9223,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ be done safely---the mutable borrow statically guarantees no other","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9228,"byte_end":9298,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/ threads are currently accessing their associated values.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9303,"byte_end":9363,"line_start":279,"line_end":279,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10052,"byte_end":10066,"line_start":309,"line_end":309,"column_start":12,"column_end":26},"name":"get_or_default","qualname":"<ThreadLocal<T>>::get_or_default","value":"pub fn get_or_default(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the element for the current thread, or creates a default one if\n it doesn't exist.\n","sig":null,"attributes":[{"value":"/ Returns the element for the current thread, or creates a default one if","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9939,"byte_end":10014,"line_start":307,"line_end":307,"column_start":5,"column_end":80}},{"value":"/ it doesn't exist.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10019,"byte_end":10040,"line_start":308,"line_end":308,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":199},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":11576,"byte_end":11583,"line_start":369,"line_end":369,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"decl_id":null,"docs":" Mutable iterator over the contents of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over the contents of a `ThreadLocal`.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":11506,"byte_end":11564,"line_start":368,"line_end":368,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":214},"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12136,"byte_end":12144,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" An iterator that moves out of a `ThreadLocal`.\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `ThreadLocal`.","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12074,"byte_end":12124,"line_start":390,"line_end":390,"column_start":1,"column_end":51}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15893,"byte_end":15910,"line_start":17,"line_end":17,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16015,"byte_end":16032,"line_start":23,"line_end":23,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17869,"byte_end":17886,"line_start":83,"line_end":83,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18331,"byte_end":18348,"line_start":103,"line_end":103,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18584,"byte_end":18601,"line_start":111,"line_end":111,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18785,"byte_end":18802,"line_start":117,"line_end":117,"column_start":43,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19049,"byte_end":19062,"line_start":125,"line_end":125,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19344,"byte_end":19357,"line_start":139,"line_end":139,"column_start":46,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19581,"byte_end":19595,"line_start":147,"line_end":147,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19848,"byte_end":19862,"line_start":161,"line_end":161,"column_start":37,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":20632,"byte_end":20647,"line_start":21,"line_end":21,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":21877,"byte_end":21883,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":22338,"byte_end":22350,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":22483,"byte_end":22495,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/unreachable.rs","byte_start":24738,"byte_end":24744,"line_start":28,"line_end":28,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/unreachable.rs","byte_start":25070,"byte_end":25076,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4044,"byte_end":4055,"line_start":117,"line_end":117,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4089,"byte_end":4100,"line_start":119,"line_end":119,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4202,"byte_end":4213,"line_start":125,"line_end":125,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4763,"byte_end":4774,"line_start":147,"line_end":147,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9470,"byte_end":9481,"line_start":285,"line_end":285,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9918,"byte_end":9929,"line_start":306,"line_end":306,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10171,"byte_end":10182,"line_start":314,"line_end":314,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10366,"byte_end":10377,"line_start":320,"line_end":320,"column_start":43,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10578,"byte_end":10585,"line_start":330,"line_end":330,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":11713,"byte_end":11720,"line_start":374,"line_end":374,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12055,"byte_end":12062,"line_start":388,"line_end":388,"column_start":46,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12242,"byte_end":12250,"line_start":396,"line_end":396,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12548,"byte_end":12556,"line_start":410,"line_end":410,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":15893,"byte_end":15910,"line_start":17,"line_end":17,"column_start":27,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":16015,"byte_end":16032,"line_start":23,"line_end":23,"column_start":15,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":17869,"byte_end":17886,"line_start":83,"line_end":83,"column_start":32,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18331,"byte_end":18348,"line_start":103,"line_end":103,"column_start":25,"column_end":42},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":12},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18584,"byte_end":18601,"line_start":111,"line_end":111,"column_start":43,"column_end":60},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":12},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":18785,"byte_end":18802,"line_start":117,"line_end":117,"column_start":43,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":12},"to":{"krate":1,"index":3874}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19049,"byte_end":19062,"line_start":125,"line_end":125,"column_start":37,"column_end":50},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19344,"byte_end":19357,"line_start":139,"line_end":139,"column_start":46,"column_end":59},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19581,"byte_end":19595,"line_start":147,"line_end":147,"column_start":28,"column_end":42},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/cached.rs","byte_start":19848,"byte_end":19862,"line_start":161,"line_end":161,"column_start":37,"column_end":51},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":61},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":20632,"byte_end":20647,"line_start":21,"line_end":21,"column_start":6,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":21877,"byte_end":21883,"line_start":61,"line_end":61,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":22338,"byte_end":22350,"line_start":78,"line_end":78,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/thread_id.rs","byte_start":22483,"byte_end":22495,"line_start":83,"line_end":83,"column_start":15,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/unreachable.rs","byte_start":24738,"byte_end":24744,"line_start":28,"line_end":28,"column_start":35,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":2,"index":31731},"to":{"krate":0,"index":97}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/unreachable.rs","byte_start":25070,"byte_end":25076,"line_start":43,"line_end":43,"column_start":41,"column_end":47},"kind":{"Impl":{"id":15}},"from":{"krate":2,"index":31890},"to":{"krate":0,"index":101}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4044,"byte_end":4055,"line_start":117,"line_end":117,"column_start":31,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4089,"byte_end":4100,"line_start":119,"line_end":119,"column_start":27,"column_end":38},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4202,"byte_end":4213,"line_start":125,"line_end":125,"column_start":24,"column_end":35},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":4763,"byte_end":4774,"line_start":147,"line_end":147,"column_start":15,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9470,"byte_end":9481,"line_start":285,"line_end":285,"column_start":32,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":5187}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":9918,"byte_end":9929,"line_start":306,"line_end":306,"column_start":25,"column_end":36},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10171,"byte_end":10182,"line_start":314,"line_end":314,"column_start":43,"column_end":54},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":135},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10366,"byte_end":10377,"line_start":320,"line_end":320,"column_start":43,"column_end":54},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":135},"to":{"krate":1,"index":3874}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":10578,"byte_end":10585,"line_start":330,"line_end":330,"column_start":28,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":186},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":11713,"byte_end":11720,"line_start":374,"line_end":374,"column_start":37,"column_end":44},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12055,"byte_end":12062,"line_start":388,"line_end":388,"column_start":46,"column_end":53},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":199},"to":{"krate":2,"index":5235}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12242,"byte_end":12250,"line_start":396,"line_end":396,"column_start":28,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/jm/.cargo/registry/src/github.com-1ecc6299db9ec823/thread_local-1.1.0/src/lib.rs","byte_start":12548,"byte_end":12556,"line_start":410,"line_end":410,"column_start":37,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":214},"to":{"krate":2,"index":5235}}]}